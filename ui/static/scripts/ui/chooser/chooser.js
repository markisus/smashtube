// Generated by CoffeeScript 1.6.3
(function() {
  define(['ractive', 'jquery', 'underscore', 'text!ui/chooser/chooser.template'], function(Ractive, $, _, template) {
    return function(options) {
      var allow_new, el, form_style, item_style, legend, onNew, onSelect, placeholder, query_url, r, styles, suggester;
      el = options.el;
      query_url = options.query_url;
      onSelect = options.onSelect;
      styles = options.styles;
      placeholder = options.placeholder;
      form_style = options.form_style;
      item_style = options.item_style;
      allow_new = options.allow_new;
      onNew = options.onNew;
      legend = options.legend;
      console.log("This is the chooser!");
      suggester = function(query, callback) {
        return $.ajax({
          url: query_url + query,
          type: 'GET',
          accepts: {
            json: 'application/json'
          }
        }).done(function(result) {
          return callback(result.objects);
        });
      };
      console.log("allow input", options.allow_input);
      console.log("template", template);
      r = new Ractive({
        el: el,
        template: template,
        data: {
          suggestions: [],
          filter_value: '',
          legend: legend,
          placeholder: placeholder,
          form_style: options.form_style,
          item_style: options.item_style
        }
      });
      r.observe('filter_value', function(t) {
        return suggester(t, function(results) {
          var current;
          results = _(results).sortBy(function(r) {
            return r.name;
          }).value();
          current = {
            name: r.get('filter_value')
          };
          if (current.name && !_(results).find(function(t) {
            return t.name.toLowerCase() === current.name.toLowerCase();
          }) && allow_new) {
            results.unshift(current);
          }
          return r.set('suggestions', results);
        });
      });
      r.on('select', function(event) {
        var thing;
        thing = event.context;
        if (thing.id != null) {
          return onSelect(thing);
        } else {
          return onNew(thing);
        }
      });
      return r;
    };
  });

}).call(this);
